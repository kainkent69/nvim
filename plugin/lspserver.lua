-- local M = {};
--
--
--
-- local servers = {
--   -- clangd = {},
--   -- gopls = {},
--   -- pyright = {},
--   -- rust_analyzer = {},
--   -- ... etc. See `:help lspconfig-all` for a list of all the pre-configured LSPs
--   --
--   -- Some languages (like typescript) have entire language plugins that can be useful:
--   --    https://github.com/pmizio/typescript-tools.nvim
--   --
--   -- But for many setups, the LSP (`ts_ls`) will work just fine
--   -- ts_ls = {},
--   --
--
--     emmet_ls = {
--     filetypes = {
--       'html',
--       'typescriptreact',
--       'javascriptreact',
--       'css',
--       'sass',
--       'scss',
--       'less',
--       'javascript',
--       'typescript',
--       'markdown',
--       'ejs',
--     },
--     init_options = {
--       html = {
--         options = {
--           ['bem.enabled'] = true,
--         },
--       },
--     },
--   },
--
--   lua_ls = {
--     -- cmd = {...},
--     -- filetypes = { ...},
--     -- capabilities = {},
--     settings = {
--       Lua = {
--         completion = {
--           callSnippet = 'Replace',
--         },
--         -- You can toggle below to ignore Lua_LS's noisy `missing-fields` warnings
--         -- diagnostics = { disable = { 'missing-fields' } },
--       },
--     },
--   },
-- }
--
-- -- Ensure the servers and tools above are installed
-- --  To check the current status of installed tools and/or manually install
-- --  other tools, you can run
-- --    :Mason
-- --
-- --  You can press `g?` for help in this menu.
-- require('mason').setup()
--
-- -- You can add other tools here that you want Mason to install
-- -- for you, so that they are available from within Neovim.
-- local ensure_installed = vim.tbl_keys(servers or {})
-- vim.list_extend(ensure_installed, {
--   'stylua', -- Used to format Lua code
-- })
-- require('mason-tool-installer').setup { ensure_installed = ensure_installed }
--
-- require('mason-lspconfig').setup {
--   ensure_installed = {},
--   automatic_installation = true,
--   handlers = {
--     function(server_name)
--       local server = servers[server_name] or {}
--       -- This handles overriding only values explicitly passed
--       -- by the server configuration above. Useful when disabling
--       -- certain features of an LSP (for example, turning off formatting for ts_ls)
--       server.capabilities = vim.tbl_deep_extend('force', {}, capabilities, server.capabilities or {})
--       require('lspconfig')[server_name].setup(server)
--     end,
--   },
-- }
--
-- M.servers = servers;
-- return M
